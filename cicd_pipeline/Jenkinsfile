pipeline {
    agent any
    stages {
        stage ("Clean WS") {
            steps {
                cleanWs()
            }
        }
        stage("Get Website") {
            steps {
                echo "---------------------------------------------------------------------------------"
                sh "wget ${webpg_url}"
                sh "ls"
                pwd()
                sh "unzip ${webpg_name}.zip"
                sh "rm -rf ${webpg_name}.zip"
                sh "ls ${webpg_name}"
                echo "---------------------------------------------------------------------------------"
            }
        }

        stage("Write Dockerfile") {
            steps {
                script {
                    echo "---------------------------------------------------------------------------------"
                    echo "Creating a Dockerfile in working directory pwd() ..."
                    writeFile file: 'Dockerfile', text: """
                        FROM httpd
                        COPY ${webpg_name} /usr/local/apache2/htdocs/
                    """.stripIndent()
                    sh "ls"
                    echo "Dockerfile created"
                    sh "cat Dockerfile"
                    echo "---------------------------------------------------------------------------------"
                }
            }
        }

        stage("Build the Image") {
            steps {
                sh "docker build -t ${webpg_name} ."
                sh "docker images"
            }
        }

        stage("Push image to Docker Hub") {
            steps {
                withDockerRegistry(url: 'https://index.docker.io/v1/', credentialsId: 'docker_hub_creds') {
                    sh "docker tag ${webpg_name} ${docker_hub_registry}:${webpg_name}"
                    sh "docker push ${docker_hub_registry}:${webpg_name}"
                }
            }
        }

        stage("Deploy Application") {
            steps {
                sh "docker ps -a"
                sh "docker run -itd --name ${webpg_name}-app -p ${container_port}:80 ${webpg_name}"
                sh "docker ps"
                echo "Access application by using >> http://${curl ifconfig.me}:${container_port} <<"
            }
        }
    }

    post {
        success {
            echo "Pipeline executed successfully."
        }
        failure {
            echo "Pipeline failed. Please check logs."
        }
    }
}